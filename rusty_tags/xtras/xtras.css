/* RustyTags Xtras - Minimal CSS for Component Functionality */
/* This file contains only the essential CSS needed for components to work */

/* === ACCORDION COMPONENTS === */

/* Accordion chevron rotation based on open state */
[data-state="open"] .accordion-chevron {
    transform: rotate(180deg);
}

/* Grid-based accordion animation system */
.grid.transition-\\[grid-template-rows\\] {
    /* Smooth grid row transitions with optimized timing */
    transition: grid-template-rows 300ms cubic-bezier(0.4, 0, 0.2, 1);
    
    /* Default to collapsed state */
    grid-template-rows: 0fr;
    
    /* Prevent layout shifts during animation */
    will-change: grid-template-rows;
}

/* Critical: Grid items need min-height: 0 for 0fr to work properly */
.grid.transition-\\[grid-template-rows\\] > * {
    min-height: 0;
    /* Ensure smooth overflow handling */
    overflow: hidden;
}

/* Width consistency - accordion maintains same width when collapsed/expanded */
[data-accordion-root] {
    /* Establish a stable width context */
    min-width: 0;
    width: 100%;
}

/* Ensure accordion content doesn't cause width changes */
.accordion-content-wrapper {
    /* Prevent content from affecting parent width */
    min-width: 0;
    max-width: 100%;
    word-wrap: break-word;
    overflow-wrap: break-word;
}

/* Initial state for default open accordions */
.accordion-initially-open {
    grid-template-rows: 1fr !important;
}

/* Prevent flash of unstyled content during initialization */
.grid.transition-\\[grid-template-rows\\]:not([style*="--accordion-open"]) {
    grid-template-rows: 0fr;
}

.grid.transition-\\[grid-template-rows\\].accordion-initially-open:not([style*="--accordion-open"]) {
    grid-template-rows: 1fr;
}

/* === DROPDOWN/POPOVER POSITIONING === */

/* Basic positioning for dropdowns and popovers */
[data-popover="true"] {
    position: absolute;
    z-index: 50;
    min-width: 8rem;
    overflow: hidden;
    border-radius: 0.375rem;
    border: 1px solid;
    background-color: white;
    padding: 0.25rem;
    color: inherit;
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
}

/* Dark mode support for dropdowns */
@media (prefers-color-scheme: dark) {
    [data-popover="true"] {
        background-color: #1f2937;
        border-color: #374151;
    }
}

/* Positioning based on data attributes */
[data-popover="true"][data-side="top"] {
    bottom: 100%;
    margin-bottom: 0.25rem;
}

[data-popover="true"][data-side="bottom"] {
    top: 100%;
    margin-top: 0.25rem;
}

[data-popover="true"][data-side="left"] {
    right: 100%;
    margin-right: 0.25rem;
}

[data-popover="true"][data-side="right"] {
    left: 100%;
    margin-left: 0.25rem;
}

/* Alignment for dropdowns */
[data-popover="true"][data-align="start"] {
    left: 0;
}

[data-popover="true"][data-align="center"] {
    left: 50%;
    transform: translateX(-50%);
}

[data-popover="true"][data-align="end"] {
    right: 0;
}

/* === TABS COMPONENTS === */

/* Tabs basic styling */
.tabs-container {
    width: 100%;
}

.tabs-list {
    display: flex;
    width: 100%;
}

.tabs-trigger {
    flex: 1;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    white-space: nowrap;
    font-size: 0.875rem;
    font-weight: 500;
    transition: all 150ms ease-in-out;
    cursor: pointer;
}

.tabs-trigger:disabled {
    pointer-events: none;
    opacity: 0.5;
}

.tabs-content {
    outline: none;
}

/* === MODAL/DIALOG COMPONENTS === */

/* Basic modal/dialog positioning and backdrop */
[data-modal-backdrop] {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: 40;
    display: flex;
    align-items: center;
    justify-content: center;
}

[data-modal-content] {
    position: relative;
    background-color: white;
    border-radius: 0.5rem;
    padding: 1.5rem;
    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
    max-width: 90vw;
    max-height: 90vh;
    overflow: auto;
    z-index: 50;
}

@media (prefers-color-scheme: dark) {
    [data-modal-content] {
        background-color: #1f2937;
        border: 1px solid #374151;
    }
}

/* === UTILITY CLASSES === */

/* Transform utilities */
.rotate-0 {
    transform: rotate(0deg);
}

.rotate-180 {
    transform: rotate(180deg);
}

/* Transition utilities for components */
.transition-transform {
    transition-property: transform;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
}

.duration-200 {
    transition-duration: 200ms;
}

.duration-300 {
    transition-duration: 300ms;
}

.ease-out {
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
}

/* === ACCESSIBILITY IMPROVEMENTS === */

/* Enhanced focus styles for all interactive components */
[data-accordion-item] summary:focus-visible,
.tabs-trigger:focus-visible,
[data-popover-trigger]:focus-visible {
    outline: 2px solid #3b82f6;
    outline-offset: 2px;
    border-radius: 0.25rem;
}

/* Optimize for reduced motion preferences */
@media (prefers-reduced-motion: reduce) {
    .grid.transition-\\[grid-template-rows\\],
    .transition-transform,
    .duration-200,
    .duration-300,
    * {
        transition: none !important;
        animation: none !important;
    }
    
    .grid.transition-\\[grid-template-rows\\][data-state="open"] {
        grid-template-rows: 1fr;
    }
    
    .grid.transition-\\[grid-template-rows\\][data-state="closed"] {
        grid-template-rows: 0fr;
    }
}